---
- name: Install required pkgs
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
  with_items:
    - apt-transport-https 
    - ca-certificates 
    - curl 
    - software-properties-common
    - awscli
  become: true

- name: Check if Docker is installed
  command: "docker --version"
  register: docker_check
  ignore_errors: yes

- name: Add Docker APT repository, install docker packages and configures docker daemon
  block:
    - name: Add APT signing key
      apt_key:
        url: "https://download.docker.com/linux/ubuntu/gpg"
        keyring: "/etc/apt/trusted.gpg.d/docker.gpg"
        state: present
      become: yes
        
    - name: Add repo
      apt_repository:
        repo: "deb https://download.docker.com/linux/ubuntu   {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
      become: yes
    
    - name: Install docker packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin
      become: True
    
    - name: Configure Docker Daemon
      copy:
        src: docker-daemon-debian.json
        dest: /etc/docker/daemon.json
      become: true

    - name: Add user to docker group
      shell: "usermod -aG docker {{ ansible_user }}"
      become: true

    - name: Initialize Docker Swarm
      command: "docker swarm init --advertise-addr {{ ansible_default_ipv4.address }}"
      become: true
      ignore_errors: yes
      register: swarm_init_result
      changed_when: "'already a swarm' not in swarm_init_result.stderr"
      failed_when: "'already a swarm' not in swarm_init_result.stderr and swarm_init_result.rc != 0"
      when: docker_check.rc == 0

    - name: Create systemd drop-in directory for docker
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory
        mode: '0755'
      become: true

    - name: Override Docker service configuration
      copy:
        src: override.conf
        dest: /etc/systemd/system/docker.service.d/override.conf
        mode: '0644'
      become: true
    
    - name: Reload systemd daemon and restart Docker service
      service:
        name: docker
        state: restarted
        enabled: yes
        daemon_reload: yes
      become: true

    - name: Deploy Portainer
      block:
        - name: Download Portainer stack file
          command: "curl -L https://experitest-appium.s3.amazonaws.com/portainer-agent-stack.yml -o portainer-agent-stack.yml"
          become: true

        - name: Deploy Portainer stack
          command: "sudo docker stack deploy --compose-file=portainer-agent-stack.yml portainer"
          become: true
  when: docker_check.rc != 0
   
- name: Make sure pip is installed
  apt:
    name: python3-pip
    state: present

- name: Install Docker SDK for Python
  pip:
    name: "{{ item }}"
    state: present
  with_items:
    - certifi
    - requests
    - docker
  
...