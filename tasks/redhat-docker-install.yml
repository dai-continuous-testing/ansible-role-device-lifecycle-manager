---

# Install docker-ce
- name: Install required pkgs
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - yum-utils
    - device-mapper-persistent-data
    - lvm2
  become: true

- name: Check if Docker is installed
  command: "docker --version"
  register: docker_check
  ignore_errors: yes

- name: Install docker and Initialize swarm
  block:
    - name: Install Docker
      yum:
        name: "{{ item }}"
        state: present
      with_items: [ 'docker-ce', 'docker-ce-cli', 'containerd.io', 'docker-compose-plugin' ]
      register: docker_installed
      async: 28800
      become: true

    - name: Configure Docker Daemon
      copy:
        src: docker-daemon.json
        dest: /etc/docker/daemon.json
      become: true

    - name: Add user to docker group
      shell: "usermod -aG docker {{ ansible_user }}"
      become: true
    
    - name: Initialize Docker Swarm
      command: "docker swarm init --advertise-addr {{ ansible_default_ipv4.address }}"
      become: true
      ignore_errors: yes
      register: swarm_init_result
      changed_when: "'already a swarm' not in swarm_init_result.stderr"
      failed_when: "'already a swarm' not in swarm_init_result.stderr and swarm_init_result.rc != 0"
      when: docker_check.rc == 0

    - name: Create systemd drop-in directory for docker
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory
        mode: '0755'
      become: true
    
    - name: Override Docker service configuration
      copy:
        src: override.conf
        dest: /etc/systemd/system/docker.service.d/override.conf
        mode: '0644'
      become: true
    
    - name: Reload systemd daemon and restart Docker service
      service:
        name: docker
        state: restarted
        daemon_reload: yes
      become: true
    
    - name: Deploy Portainer
      block:
        - name: Download Portainer stack file
          get_url:
            url: "https://experitest-appium.s3.amazonaws.com/portainer-agent-stack.yml"
            dest: "/tmp/portainer-agent-stack.yml"
            mode: '0644'
          become: true

        - name: Deploy Portainer stack
          ansible.builtin.command:
            cmd: "sudo docker stack deploy --compose-file=/tmp/portainer-agent-stack.yml portainer"
          become: true
  when: docker_check.rc != 0

# Install AWS Cli
- name: installing awscli on the machine
  yum:
    name: awscli
    state: present
  become: true

- name: Make sure pip is installed
  yum:
    name: python-pip
    state: present
  become: true

- name: Install Docker SDK for Python
  pip:
    name: "{{ item }}"
    state: present
  with_items:
    - certifi==2020.6.20
    - requests==2.24.0
    - docker==4.3.1
  become: true
  
...
